import{s as fs,e,a as t,H as Es,c as o,l as p,g as r,p as _s,m as h,i as n,n as X,f as l}from"./scheduler.D4vXfk3B.js";import{S as vs,i as xs}from"./index.DBFCcoIS.js";function ms(Bs){let c,Y='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#faux-3d-perspective-shader-for-2d-canvas-items-in-godot">Faux 3D Perspective Shader for 2D Canvas Items in Godot</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#what-is-it">WHAT IS IT?</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#effect">EFFECT</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#usage">USAGE</a><ol class="toc-level toc-level-3"><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#general-usage">General Usage</a></li><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#card-game-example">Card Game Example</a></li></ol></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#license">LICENSE</a></li></ol></li></ol>',S,i,Z="Faux 3D Perspective Shader for 2D Canvas Items in Godot",M,B,ss='(originally released on <a href="https://godotshaders.com/shader/faux-3d-perspective-shader-for-2d-canvas-items/" rel="nofollow">Godot Shaders</a>)',L,C,as="WHAT IS IT?",P,u,ns='An improvement on <a href="https://godotshaders.com/shader/2d-perspective/" rel="nofollow">Hei’s 2d-perspective shader</a>.',V,f,ls="The most important difference to note in this shader are:",I,E,es="<li>This shader uses updated syntax (Compatible with Godot 4.4+)</li> <li>It adds a parameter ‘use_front’ that allows for the Canvas Item to have a front and the back side.</li> <li>The UV’s will scale so the textures are applied as you would expect any other 3D object to behave.</li> <li>It adds an example use case script for simulating 3D cards in a 2D card game, which uses the shader applied on a SubViewportContainer, allowing you to layout the cards with 2D UI elements while retaining their 3D looks.</li>",G,_,ts='The shader code can be found <a href="https://github.com/codevogel/faux-3d-perspective-shader-godot/blob/main/example/shader/faux_3d_perspective_shader.gdshader" rel="nofollow">here</a>.',q,y,os="EFFECT",U,v,ps='<img src="https://raw.githubusercontent.com/codevogel/faux-3d-perspective-shader-godot/refs/heads/main/github-assets/example_effect.gif" alt="Effect Demo"/>',j,D,rs="USAGE",R,x,cs="<strong>The best way to explore this shader’s usage is to clone this project and open it in Godot 4.4+.</strong>",N,A,is="General Usage",z,m,Cs="<li>Create a new ShaderMaterial and assign this shader to it.</li> <li>Apply the ShaderMaterial to a CanvasItem, such as a TextureRect or SubViewportContainer.</li> <li>Adjust the shader parameters to achieve the desired perspective effect.</li>",O,F,ys="Card Game Example",W,b,Ds="<li>Create a new SubViewportContainer node.</li> <li>Add a SubViewport as a child of the SubViewportContainer.</li> <li>Add a VBoxContainer as a child of the SubViewport.</li> <li>Add a TextureRect as a child of the VBoxContainer. This will be used to display the card art.</li> <li>Add a CardContents node as a child of the VBoxContainer. This will be used to display any UI elements on the card.</li> <li>Add any Controls of your liking to the CardContents node.</li> <li>Assign the Faux 3D Perspective shader to a ShaderMaterial and assign it to the SubViewportContainer’s material property.</li>",$,g,As=`See the <code>Card.gd</code> script below for an example of how to control the shader parameters and switch between front and back art based on rotation.
The latest version can be found in <a href="https://github.com/codevogel/faux-3d-perspective-shader-godot/blob/main/example/card.gd" rel="nofollow">Card.gd</a>, but here is a copy for convenience:`,J,k,us=`<pre class="shiki poimandres" style="background-color:#1b1e28;color:#a6accd" tabindex="0"><code><span class="line"><span style="color:#767C9DB0;font-style:italic"># An example of a simulating a 3D card with a 2D TextureRect</span></span>
<span class="line"><span style="color:#767C9DB0;font-style:italic"># using the Faux 3D Perspective shader by CodeVogel (https://github.com/codevogel/faux-3d-perspective-shader-godot)</span></span>
<span class="line"><span style="color:#ADD7FF">@tool</span></span>
<span class="line"><span style="color:#A6ACCD">extends </span><span style="color:#A6ACCDC0">SubViewportContainer</span></span>
<span class="line"><span style="color:#A6ACCD">class_name </span><span style="color:#A6ACCDC0">Card</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADD7FF">@export</span><span style="color:#91B4D5"> var</span><span style="color:#E4F0FB"> front_art</span><span style="color:#A6ACCD">: </span><span style="color:#A6ACCDC0">Texture2D</span><span style="color:#91B4D5"> =</span><span style="color:#A6ACCD"> preload(</span><span style="color:#5DE4C7">"uid://d0cdfxs15e68h"</span><span style="color:#A6ACCD">):</span></span>
<span class="line"><span style="color:#ADD7FF">	set</span><span style="color:#A6ACCD">(</span><span style="color:#E4F0FB">value</span><span style="color:#A6ACCD">):</span></span>
<span class="line"><span style="color:#E4F0FB">		front_art</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> value</span></span>
<span class="line"><span style="color:#E4F0FBD0">		_refresh</span><span style="color:#A6ACCD">()</span></span>
<span class="line"><span style="color:#ADD7FF">@export</span><span style="color:#91B4D5"> var</span><span style="color:#E4F0FB"> back_art</span><span style="color:#A6ACCD">: </span><span style="color:#A6ACCDC0">Texture2D</span><span style="color:#91B4D5"> =</span><span style="color:#A6ACCD"> preload(</span><span style="color:#5DE4C7">"uid://d2qctukn38v5q"</span><span style="color:#A6ACCD">):</span></span>
<span class="line"><span style="color:#ADD7FF">	set</span><span style="color:#A6ACCD">(</span><span style="color:#E4F0FB">value</span><span style="color:#A6ACCD">):</span></span>
<span class="line"><span style="color:#E4F0FB">		back_art</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> value</span></span>
<span class="line"><span style="color:#E4F0FBD0">		_refresh</span><span style="color:#A6ACCD">()</span></span>
<span class="line"><span style="color:#ADD7FF">@export</span><span style="color:#91B4D5"> var</span><span style="color:#E4F0FB"> cull_backface</span><span style="color:#A6ACCD">: </span><span style="color:#A6ACCDC0">bool</span><span style="color:#91B4D5"> =</span><span style="color:#5DE4C7"> false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADD7FF">@onready</span><span style="color:#91B4D5"> var</span><span style="color:#E4F0FB"> art_texture_rect</span><span style="color:#A6ACCD">: </span><span style="color:#A6ACCDC0">TextureRect</span><span style="color:#91B4D5"> =</span><span style="color:#5DE4C7C0"> $</span><span style="color:#5FB3A1">SubViewport/ArtTextureRect</span></span>
<span class="line"><span style="color:#ADD7FF">@onready</span><span style="color:#91B4D5"> var</span><span style="color:#E4F0FB"> card_contents</span><span style="color:#A6ACCD">: </span><span style="color:#A6ACCDC0">Control</span><span style="color:#91B4D5"> =</span><span style="color:#5DE4C7C0"> $</span><span style="color:#5FB3A1">SubViewport/CardContents</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADD7FF">@export_range</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">1</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">120</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">1</span><span style="color:#A6ACCD">) </span><span style="color:#91B4D5">var</span><span style="color:#E4F0FB"> simulated_camera_fov</span><span style="color:#A6ACCD">: </span><span style="color:#A6ACCDC0">float</span><span style="color:#91B4D5"> =</span><span style="color:#5DE4C7"> 60</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#ADD7FF">	set</span><span style="color:#A6ACCD">(</span><span style="color:#E4F0FB">value</span><span style="color:#A6ACCD">):</span></span>
<span class="line"><span style="color:#E4F0FB">		simulated_camera_fov</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> value</span></span>
<span class="line"><span style="color:#E4F0FBD0">		_refresh</span><span style="color:#A6ACCD">()</span></span>
<span class="line"><span style="color:#ADD7FF">@export_range</span><span style="color:#A6ACCD">(</span><span style="color:#91B4D5">-</span><span style="color:#5DE4C7">360</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">360</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">1</span><span style="color:#A6ACCD">) </span><span style="color:#91B4D5">var</span><span style="color:#E4F0FB"> rotation_y</span><span style="color:#A6ACCD">: </span><span style="color:#A6ACCDC0">float</span><span style="color:#91B4D5"> =</span><span style="color:#5DE4C7"> 0.0</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#ADD7FF">	set</span><span style="color:#A6ACCD">(</span><span style="color:#E4F0FB">value</span><span style="color:#A6ACCD">):</span></span>
<span class="line"><span style="color:#E4F0FB">		rotation_y</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> value</span></span>
<span class="line"><span style="color:#E4F0FBD0">		_refresh</span><span style="color:#A6ACCD">()</span></span>
<span class="line"><span style="color:#ADD7FF">@export_range</span><span style="color:#A6ACCD">(</span><span style="color:#91B4D5">-</span><span style="color:#5DE4C7">360</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">360</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">1</span><span style="color:#A6ACCD">) </span><span style="color:#91B4D5">var</span><span style="color:#E4F0FB"> rotation_x</span><span style="color:#A6ACCD">: </span><span style="color:#A6ACCDC0">float</span><span style="color:#91B4D5"> =</span><span style="color:#5DE4C7"> 0.0</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#ADD7FF">	set</span><span style="color:#A6ACCD">(</span><span style="color:#E4F0FB">value</span><span style="color:#A6ACCD">):</span></span>
<span class="line"><span style="color:#E4F0FB">		rotation_x</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> value</span></span>
<span class="line"><span style="color:#E4F0FBD0">		_refresh</span><span style="color:#A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">func</span><span style="color:#ADD7FF"> _get_configuration_warnings</span><span style="color:#A6ACCD">() </span><span style="color:#91B4D5">-></span><span style="color:#A6ACCDC0"> PackedStringArray</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#91B4D5">	var</span><span style="color:#E4F0FB"> warnings</span><span style="color:#A6ACCD">: </span><span style="color:#A6ACCDC0">PackedStringArray</span><span style="color:#91B4D5"> =</span><span style="color:#A6ACCD"> []</span></span>
<span class="line"><span style="color:#5DE4C7C0">	if</span><span style="color:#91B4D5"> not</span><span style="color:#E4F0FB"> front_art</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#E4F0FB">		warnings</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">append</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">"Front art texture is not assigned."</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#5DE4C7C0">	if</span><span style="color:#E4F0FB"> cull_backface</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#5DE4C7C0">		if</span><span style="color:#E4F0FB"> back_art</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#E4F0FB">			warnings</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">append</span><span style="color:#A6ACCD">(</span></span>
<span class="line"><span style="color:#5DE4C7">				"Back art texture will not be visible because backface culling is enabled."</span></span>
<span class="line"><span style="color:#A6ACCD">			)</span></span>
<span class="line"><span style="color:#5DE4C7C0">	elif</span><span style="color:#91B4D5"> not</span><span style="color:#E4F0FB"> back_art</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#E4F0FB">		warnings</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">append</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">"Back art texture is not assigned."</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#5DE4C7C0">	if</span><span style="color:#91B4D5"> not</span><span style="color:#A6ACCD"> (</span><span style="color:#E4F0FB">material</span><span style="color:#A6ACCD"> is </span><span style="color:#A6ACCDC0">ShaderMaterial</span><span style="color:#A6ACCD">):</span></span>
<span class="line"><span style="color:#E4F0FB">		warnings</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">append</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">"CardArt requires a ShaderMaterial to function properly."</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#5DE4C7C0">	return</span><span style="color:#E4F0FB"> warnings</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">func</span><span style="color:#ADD7FF"> _ready</span><span style="color:#A6ACCD">():</span></span>
<span class="line"><span style="color:#5DE4C7C0">	if</span><span style="color:#91B4D5"> not</span><span style="color:#A6ACCDC0"> Engine</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">is_editor_hint</span><span style="color:#A6ACCD">():</span></span>
<span class="line"><span style="color:#E4F0FBD0">		_refresh</span><span style="color:#A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">func</span><span style="color:#ADD7FF"> _refresh</span><span style="color:#A6ACCD">():</span></span>
<span class="line"><span style="color:#5DE4C7C0">	if</span><span style="color:#91B4D5"> not</span><span style="color:#A6ACCD"> (</span><span style="color:#E4F0FB">material</span><span style="color:#A6ACCD"> is </span><span style="color:#A6ACCDC0">ShaderMaterial</span><span style="color:#A6ACCD">):</span></span>
<span class="line"><span style="color:#5DE4C7C0">		return</span></span>
<span class="line"><span style="color:#5DE4C7C0">	if</span><span style="color:#91B4D5"> not</span><span style="color:#E4F0FB"> card_contents</span><span style="color:#91B4D5"> or</span><span style="color:#91B4D5"> not</span><span style="color:#E4F0FB"> art_texture_rect</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#5DE4C7C0">		return</span></span>
<span class="line"><span style="color:#91B4D5">	var</span><span style="color:#E4F0FB"> shader_material</span><span style="color:#91B4D5"> :=</span><span style="color:#E4F0FB"> material</span><span style="color:#A6ACCD"> as </span><span style="color:#A6ACCDC0">ShaderMaterial</span></span>
<span class="line"><span style="color:#E4F0FB">	shader_material</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">set_shader_parameter</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">"rot_y_deg"</span><span style="color:#A6ACCD">, </span><span style="color:#E4F0FB">rotation_y</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#E4F0FB">	shader_material</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">set_shader_parameter</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">"rot_x_deg"</span><span style="color:#A6ACCD">, </span><span style="color:#E4F0FB">rotation_x</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#E4F0FB">	shader_material</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">set_shader_parameter</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">"cull_backface"</span><span style="color:#A6ACCD">, </span><span style="color:#E4F0FB">cull_backface</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#E4F0FB">	shader_material</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">set_shader_parameter</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">"fov"</span><span style="color:#A6ACCD">, </span><span style="color:#E4F0FB">simulated_camera_fov</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#E4F0FBD0">	_refresh_texture</span><span style="color:#A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">func</span><span style="color:#ADD7FF"> _refresh_texture</span><span style="color:#A6ACCD">():</span></span>
<span class="line"><span style="color:#5DE4C7C0">	if</span><span style="color:#91B4D5"> not</span><span style="color:#E4F0FB"> front_art</span><span style="color:#91B4D5"> or</span><span style="color:#91B4D5"> not</span><span style="color:#E4F0FB"> back_art</span><span style="color:#A6ACCD">:</span></span>
<span class="line"><span style="color:#5DE4C7C0">		return</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91B4D5">	var</span><span style="color:#E4F0FB"> rot_x_deg</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FBD0"> wrapf</span><span style="color:#A6ACCD">(</span><span style="color:#E4F0FB">rotation_x</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">0</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">360</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#91B4D5">	var</span><span style="color:#E4F0FB"> rot_y_deg</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FBD0"> wrapf</span><span style="color:#A6ACCD">(</span><span style="color:#E4F0FB">rotation_y</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">0</span><span style="color:#A6ACCD">, </span><span style="color:#5DE4C7">360</span><span style="color:#A6ACCD">)</span></span>
<span class="line"><span style="color:#91B4D5">	var</span><span style="color:#E4F0FB"> front_facing_over_x</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> rot_x_deg</span><span style="color:#91B4D5"> &#x3C;</span><span style="color:#5DE4C7"> 90</span><span style="color:#91B4D5"> or</span><span style="color:#E4F0FB"> rot_x_deg</span><span style="color:#91B4D5"> ></span><span style="color:#5DE4C7"> 270</span></span>
<span class="line"><span style="color:#91B4D5">	var</span><span style="color:#E4F0FB"> front_facing_over_y</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> rot_y_deg</span><span style="color:#91B4D5"> &#x3C;</span><span style="color:#5DE4C7"> 90</span><span style="color:#91B4D5"> or</span><span style="color:#E4F0FB"> rot_y_deg</span><span style="color:#91B4D5"> ></span><span style="color:#5DE4C7"> 270</span></span>
<span class="line"><span style="color:#91B4D5">	var</span><span style="color:#E4F0FB"> use_front</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> front_facing_over_y</span><span style="color:#91B4D5"> ==</span><span style="color:#E4F0FB"> front_facing_over_x</span></span>
<span class="line"><span style="color:#E4F0FB">	card_contents</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FB">visible</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> use_front</span></span>
<span class="line"><span style="color:#E4F0FB">	art_texture_rect</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FB">texture</span><span style="color:#91B4D5"> =</span><span style="color:#E4F0FB"> front_art</span><span style="color:#5DE4C7C0"> if</span><span style="color:#E4F0FB"> use_front</span><span style="color:#5DE4C7C0"> else</span><span style="color:#E4F0FB"> back_art</span></span>
<span class="line"><span style="color:#E4F0FB">	material</span><span style="color:#A6ACCD">.</span><span style="color:#E4F0FBD0">set_shader_parameter</span><span style="color:#A6ACCD">(</span><span style="color:#5DE4C7">"use_front"</span><span style="color:#A6ACCD">, </span><span style="color:#E4F0FB">use_front</span><span style="color:#A6ACCD">)</span></span></code></pre>`,H,d,Fs="LICENSE",K,w,ds="MIT License",Q,T,hs='See the <a href="https://github.com/codevogel/faux-3d-perspective-shader" rel="nofollow">Example Project on GitHub</a> for more details.';return{c(){c=e("nav"),c.innerHTML=Y,S=t(),i=e("h1"),i.textContent=Z,M=t(),B=e("p"),B.innerHTML=ss,L=t(),C=e("h2"),C.textContent=as,P=t(),u=e("p"),u.innerHTML=ns,V=t(),f=e("p"),f.textContent=ls,I=t(),E=e("ul"),E.innerHTML=es,G=t(),_=e("p"),_.innerHTML=ts,q=t(),y=e("h2"),y.textContent=os,U=t(),v=e("p"),v.innerHTML=ps,j=t(),D=e("h2"),D.textContent=rs,R=t(),x=e("p"),x.innerHTML=cs,N=t(),A=e("h3"),A.textContent=is,z=t(),m=e("ol"),m.innerHTML=Cs,O=t(),F=e("h3"),F.textContent=ys,W=t(),b=e("ol"),b.innerHTML=Ds,$=t(),g=e("p"),g.innerHTML=As,J=t(),k=new Es(!1),H=t(),d=e("h2"),d.textContent=Fs,K=t(),w=e("p"),w.textContent=ds,Q=t(),T=e("p"),T.innerHTML=hs,this.h()},l(s){c=o(s,"NAV",{class:!0,"data-svelte-h":!0}),p(c)!=="svelte-2k3f6w"&&(c.innerHTML=Y),S=r(s),i=o(s,"H1",{id:!0,"data-svelte-h":!0}),p(i)!=="svelte-501z5r"&&(i.textContent=Z),M=r(s),B=o(s,"P",{"data-svelte-h":!0}),p(B)!=="svelte-9a7t2a"&&(B.innerHTML=ss),L=r(s),C=o(s,"H2",{id:!0,"data-svelte-h":!0}),p(C)!=="svelte-lgci9b"&&(C.textContent=as),P=r(s),u=o(s,"P",{"data-svelte-h":!0}),p(u)!=="svelte-pp1ptv"&&(u.innerHTML=ns),V=r(s),f=o(s,"P",{"data-svelte-h":!0}),p(f)!=="svelte-1vkuh7q"&&(f.textContent=ls),I=r(s),E=o(s,"UL",{"data-svelte-h":!0}),p(E)!=="svelte-1i1qgn3"&&(E.innerHTML=es),G=r(s),_=o(s,"P",{"data-svelte-h":!0}),p(_)!=="svelte-1q5e7ie"&&(_.innerHTML=ts),q=r(s),y=o(s,"H2",{id:!0,"data-svelte-h":!0}),p(y)!=="svelte-y0tn4a"&&(y.textContent=os),U=r(s),v=o(s,"P",{"data-svelte-h":!0}),p(v)!=="svelte-1sqswci"&&(v.innerHTML=ps),j=r(s),D=o(s,"H2",{id:!0,"data-svelte-h":!0}),p(D)!=="svelte-1yz9b8o"&&(D.textContent=rs),R=r(s),x=o(s,"P",{"data-svelte-h":!0}),p(x)!=="svelte-1h3jwlv"&&(x.innerHTML=cs),N=r(s),A=o(s,"H3",{id:!0,"data-svelte-h":!0}),p(A)!=="svelte-1sirk3l"&&(A.textContent=is),z=r(s),m=o(s,"OL",{"data-svelte-h":!0}),p(m)!=="svelte-1eijlcp"&&(m.innerHTML=Cs),O=r(s),F=o(s,"H3",{id:!0,"data-svelte-h":!0}),p(F)!=="svelte-1novsna"&&(F.textContent=ys),W=r(s),b=o(s,"OL",{"data-svelte-h":!0}),p(b)!=="svelte-1jycuxt"&&(b.innerHTML=Ds),$=r(s),g=o(s,"P",{"data-svelte-h":!0}),p(g)!=="svelte-15sx03a"&&(g.innerHTML=As),J=r(s),k=_s(s,!1),H=r(s),d=o(s,"H2",{id:!0,"data-svelte-h":!0}),p(d)!=="svelte-43n3x8"&&(d.textContent=Fs),K=r(s),w=o(s,"P",{"data-svelte-h":!0}),p(w)!=="svelte-h60ghx"&&(w.textContent=ds),Q=r(s),T=o(s,"P",{"data-svelte-h":!0}),p(T)!=="svelte-1o5gqrc"&&(T.innerHTML=hs),this.h()},h(){h(c,"class","toc"),h(i,"id","faux-3d-perspective-shader-for-2d-canvas-items-in-godot"),h(C,"id","what-is-it"),h(y,"id","effect"),h(D,"id","usage"),h(A,"id","general-usage"),h(F,"id","card-game-example"),k.a=H,h(d,"id","license")},m(s,a){n(s,c,a),n(s,S,a),n(s,i,a),n(s,M,a),n(s,B,a),n(s,L,a),n(s,C,a),n(s,P,a),n(s,u,a),n(s,V,a),n(s,f,a),n(s,I,a),n(s,E,a),n(s,G,a),n(s,_,a),n(s,q,a),n(s,y,a),n(s,U,a),n(s,v,a),n(s,j,a),n(s,D,a),n(s,R,a),n(s,x,a),n(s,N,a),n(s,A,a),n(s,z,a),n(s,m,a),n(s,O,a),n(s,F,a),n(s,W,a),n(s,b,a),n(s,$,a),n(s,g,a),n(s,J,a),k.m(us,s,a),n(s,H,a),n(s,d,a),n(s,K,a),n(s,w,a),n(s,Q,a),n(s,T,a)},p:X,i:X,o:X,d(s){s&&(l(c),l(S),l(i),l(M),l(B),l(L),l(C),l(P),l(u),l(V),l(f),l(I),l(E),l(G),l(_),l(q),l(y),l(U),l(v),l(j),l(D),l(R),l(x),l(N),l(A),l(z),l(m),l(O),l(F),l(W),l(b),l($),l(g),l(J),k.d(),l(H),l(d),l(K),l(w),l(Q),l(T))}}}const ws={title:"Faux 3D Perspective Shader",description:"A Godot shader that fakes 3D perspective on 2D Canvas items.",date:"2023-4-14",category:"tool",published:!0};class Ts extends vs{constructor(c){super(),xs(this,c,null,ms,fs,{})}}export{Ts as default,ws as metadata};
